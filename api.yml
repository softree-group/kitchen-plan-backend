openapi: "3.0.2"
info:
  title: "Kitchen Plan"
  version: "1.0"
  description: "Kitchen plan api description"
tags:
  - name: recipes
    description: "recipes operations"
  - name: ingredients
    description: "ingredients operations"
paths:
  "/recipes":
    get:
      tags:
        - "recipes"
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Since"
        - $ref: "#/components/parameters/Title"
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: ingredients
          schema:
            type: array
            items:
              type: number
      responses:
        200:
          description: Array of all reciepts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReceiptBase"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalError"
  "/recipes/{id}":
    get:
      tags:
        - "recipes"
      parameters:
        - $ref: "#/components/parameters/IdInPath"
      responses:
        200:
          description: Full reciept
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Receipt"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalError"
  "/ingredients":
    get:
      tags:
        - "ingredients"
      parameters:
        - $ref: "#/components/parameters/Title"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IngredientBase"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalError"
  "/ingredients/{id}":
    get:
      tags:
        - "ingredients"
      parameters:
        - $ref: "#/components/parameters/IdInPath"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ingredient"
        400:
          $ref: "#/components/responses/BadRequest"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalError"
components:
  parameters:
    Title:
      in: query
      name: title
      schema:
        type: string
    Limit:
      in: query
      name: limit
      schema:
        type: number
    Since:
      in: query
      name: limit
      schema:
        type: number
    IdInPath:
      in: path
      name: id
      required: true
      description: "Numeric ID"
      schema:
        type: number

  responses:
    BadRequest:
      description: Client send wrong request
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
            example: "Bad request"
    NotFound:
      description: Data not found
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
            example: "Not found"
    InternalError:
      description: Something went wrong
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
            example: "Some fail"

  schemas:
    IngredientBase:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        image:
          type: string
    Ingredient:
      allOf:
        - $ref: "#/components/schemas/IngredientBase"
        - type: object
          properties:
            proteins:
              type: number
            fats:
              type: number
            carbohydrates:
              type: number

    ReceiptBase:
      type: object
      properties:
        id:
          type: number
        image:
          type: string
        title:
          type: string
        time_to_cook:
          type: number
        type:
          type: string
    Receipt:
      allOf:
        - $ref: "#/components/schemas/ReceiptBase"
        - type: object
          properties:
            steps:
              type: array
              items:
                type: string
            ingredients:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/IngredientBase"
                  - type: object
                    properties:
                      measure:
                        type: string
                      quantity:
                        type: number
    Error:
      type: string
