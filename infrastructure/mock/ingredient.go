// Code generated by MockGen. DO NOT EDIT.
// Source: domain/repository/ingredient.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/softree-group/kitchen-plan-backend/domain/entity"
)

// MockIngredientReceiver is a mock of IngredientReceiver interface.
type MockIngredientReceiver struct {
	ctrl     *gomock.Controller
	recorder *MockIngredientReceiverMockRecorder
}

// MockIngredientReceiverMockRecorder is the mock recorder for MockIngredientReceiver.
type MockIngredientReceiverMockRecorder struct {
	mock *MockIngredientReceiver
}

// NewMockIngredientReceiver creates a new mock instance.
func NewMockIngredientReceiver(ctrl *gomock.Controller) *MockIngredientReceiver {
	mock := &MockIngredientReceiver{ctrl: ctrl}
	mock.recorder = &MockIngredientReceiverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIngredientReceiver) EXPECT() *MockIngredientReceiverMockRecorder {
	return m.recorder
}

// GetIngredient mocks base method.
func (m *MockIngredientReceiver) GetIngredient(id int) (*entity.Ingredient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIngredient", id)
	ret0, _ := ret[0].(*entity.Ingredient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIngredient indicates an expected call of GetIngredient.
func (mr *MockIngredientReceiverMockRecorder) GetIngredient(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIngredient", reflect.TypeOf((*MockIngredientReceiver)(nil).GetIngredient), id)
}

// GetIngredients mocks base method.
func (m *MockIngredientReceiver) GetIngredients(title string) ([]entity.Ingredient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIngredients", title)
	ret0, _ := ret[0].([]entity.Ingredient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIngredients indicates an expected call of GetIngredients.
func (mr *MockIngredientReceiverMockRecorder) GetIngredients(title interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIngredients", reflect.TypeOf((*MockIngredientReceiver)(nil).GetIngredients), title)
}
